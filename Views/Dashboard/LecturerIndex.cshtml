@model List<ST10442835_PROG6212_CMCS.Models.Claim>
@{
    ViewData["Title"] = "Lecturer Dashboard";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lecturer Dashboard - CMCS</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .navbar {
            background-color: #007ACC;
        }

        .navbar-brand, .nav-link {
            color: white !important;
        }

        .card {
            border-radius: 12px;
            box-shadow: 0px 4px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .status-badge {
            font-size: 0.8rem;
            padding: 4px 8px;
            border-radius: 6px;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">CMCS - Lecturer</a>
            <div class="d-flex">
                <a asp-controller="Home" asp-action="Index" class="btn btn-light btn-sm">Logout</a>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <h3>Welcome, Lecturer</h3>

        <!-- Alert Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="row mt-4">
            <!-- Submit New Claim -->
            <div class="col-md-6">
                <div class="card p-3">
                    <h5>Submit New Claim</h5>
                    <form action="/Claims/Create" method="post" enctype="multipart/form-data" id="claimForm">
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            <label for="Month" class="form-label">Month *</label>
                            <select name="Month" class="form-select" required>
                                <option value="">Select Month</option>
                                <option value="January">January</option>
                                <option value="February">February</option>
                                <option value="March">March</option>
                                <option value="April">April</option>
                                <option value="May">May</option>
                                <option value="June">June</option>
                                <option value="July">July</option>
                                <option value="August">August</option>
                                <option value="September">September</option>
                                <option value="October">October</option>
                                <option value="November">November</option>
                                <option value="December">December</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="HoursWorked" class="form-label">Hours Worked *</label>
                            <input name="HoursWorked" class="form-control" placeholder="Enter hours" required
                                   type="number" min="1" max="744" />
                            <small class="form-text text-muted">Max 744 hours per month</small>
                        </div>

                        <div class="mb-3">
                            <label for="HourlyRate" class="form-label">Hourly Rate (R) *</label>
                            <input name="HourlyRate" class="form-control" placeholder="Enter rate" required
                                   type="number" step="0.01" min="1" max="1000" />
                            <small class="form-text text-muted">Rate between R1 - R1000</small>
                        </div>

                        <div class="mb-3">
                            <label for="Notes" class="form-label">Additional Notes</label>
                            <textarea name="Notes" class="form-control" rows="3"
                                      placeholder="Add any additional information about this claim..."></textarea>
                        </div>

                        <div class="mb-3">
                            <label for="DocumentFile" class="form-label">Upload Supporting Document</label>
                            <input name="DocumentFile" type="file" class="form-control"
                                   accept=".pdf,.docx,.xlsx" />
                            <small class="form-text text-muted">Allowed formats: PDF, DOCX, XLSX (Max: 5MB)</small>
                        </div>

                        <button type="submit" class="btn btn-primary">Submit Claim</button>
                    </form>
                </div>
            </div>

            <!-- My Claims -->
            <div class="col-md-6">
                <div class="card p-3">
                    <h5>My Submitted Claims</h5>
                    @if (Model != null && Model.Any())
                    {
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Month</th>
                                    <th>Hours</th>
                                    <th>Rate</th>
                                    <th>Total</th>
                                    <th>Status</th>
                                    <th>Document</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var claim in Model)
                                {
                                    <tr>
                                        <td>@claim.Month</td>
                                        <td>@claim.HoursWorked</td>
                                        <td>@claim.HourlyRate.ToString("C")</td>
                                        <td>@claim.TotalAmount.ToString("C")</td>
                                        <td>
                                            @if (claim.Status == "Approved")
                                            {
                                                <span class="badge bg-success">@claim.Status</span>
                                            }
                                            else if (claim.Status == "Rejected")
                                            {
                                                <span class="badge bg-danger">@claim.Status</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning">@claim.Status</span>
                                            }
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(claim.DocumentUrl))
                                            {
                                                <a href="@Url.Action("ViewDocument", "Claims", new { id = claim.Id })" target="_blank">View</a>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No document</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <p>No claims submitted yet.</p>
                            <p>Submit your first claim using the form on the left.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Calculate total amount in real-time
        function calculateTotal() {
            const hours = document.querySelector('input[name="HoursWorked"]').value;
            const rate = document.querySelector('input[name="HourlyRate"]').value;
            const total = hours * rate;
            // You can display this somewhere if needed
            console.log('Total amount: R ' + (total || 0).toFixed(2));
        }

        document.querySelector('input[name="HoursWorked"]').addEventListener('input', calculateTotal);
        document.querySelector('input[name="HourlyRate"]').addEventListener('input', calculateTotal);

        // File validation
        function validateFile(input) {
            if (input.files.length > 0) {
                const file = input.files[0];
                const allowedTypes = ['.pdf', '.docx', '.xlsx'];
                const fileExtension = '.' + file.name.split('.').pop().toLowerCase();
                const maxSize = 5 * 1024 * 1024; // 5MB

                if (!allowedTypes.includes(fileExtension)) {
                    alert('Only PDF, DOCX, and XLSX files are allowed.');
                    input.value = '';
                    return false;
                }

                if (file.size > maxSize) {
                    alert('File size must be less than 5MB.');
                    input.value = '';
                    return false;
                }
            }
            return true;
        }

        // Form validation
        document.getElementById('claimForm').addEventListener('submit', function(e) {
            const fileInput = document.querySelector('input[name="DocumentFile"]');
            if (fileInput.files.length > 0) {
                if (!validateFile(fileInput)) {
                    e.preventDefault();
                    return false;
                }
            }
            return true;
        });
    </script>
</body>
</html>